COMANDOS SQL



\! clear 				--> Limpar tela no terminal mysql
show databases				--->mostra os bancos de dados existentes 


	DDL --> CREATE DATABASE
		CREATE TABLE
		ALTER TABLE
		DROP TABLE

CREATE DATABASE 'nome do banco';     	--> CRia um bando de dados
USE 'NOME DO BANDO'

CREATE TABLE 'nome da tabela' ;

SHOW TABLES;


DESCREIBE 'nome da tabela' =  			--> 'mostra oc campos da tabela'


DROP database 'nome do banco';  		-->deleta o banco de dados


CRIANDO UM BANDO DE DADOS EXEMPLO:

CREATE DATABASE cadastro
DEFAULT CHARACTER SET utf8
DEFAULT COLLATE utf8_general_ci;

CREATE TABLE  IF NOT EXISTS pessoa(
	id int NOT NULL AUTO_INCREMENT,
	nome varchar(30)NOT NULL, 
	nascimento date NOT NULL, 
	sexo enum('M', 'F') NOT NULL, 
	peso decimal(5,2), 
	altura decimal(3,2), 
	nacionalidade varchar(20) DEFAULT 'Brasil', 
	PRIMARY KEY (id)
) DEFAULT CHARSET = utf8;


	#INSERINDO DADOS NA TABELA COM (INSERT INTO)

INSERT INTO pessoa(id, nome, nascimento, sexo, peso, altura, nacionalidade)
VALUES('1', 'Eduardo', '1995-05-26', 'M', '63.5', '1.75' , 'Brasil');



	#COMANDOS DE ALTERAÇÃO DE TABELAS


ALTER TABLE pessoa

ADD COLUMN 'nome do campo' 		--> Adciona um campo na tabela

DROMP COLUMN 				--> Deleta uma coluna da tabela.


ALTER TABLE pessoa
ADD COLUMN profissao VARCHAR(20) AFTER nome;	--> Adciona o campo profissao depois do campo nome;


ALTER TABLE pessoa
ADD COLMUN profissao VARCHAR(30) FIRST;		--> Adciona a coluna como primeiro campo da tabela.

ALTER TABLE pessoa
MODIFY COLUMN profissao VARCHAR(30) NOT NULL;

#modificar no nome da coluna da tabela;

alter table pessoa
change column profissao prof varchar(20);


modificar o nome da tabela

alter table pessoa		--> muda o nome da tabela
raname to gafanhatos



ALTER TABLE curso
ADD COLUMN iD INT FIRST;	-->adciona um campo id na tabela
ALTER TABLE curso
ADD PRIMATY KEY (id)		-->Faz o id virar um chave primaria.


	
	INSERT INTO
DML -->	UPDATE
	DELETE
	TRUNCATE



	#ALTERAR OS REGISTROS DAS TABELAS

UPDATE cursos
SET nome = 'HTML5 e CSS3' WHERE id = '1';          --> Alterando registros da tabela
 

UPDATE curso
SET nome = 'blablabal', ano='000' where id = '3'; ->>  ALTERANDO DOIS VAORES AO MESMO TEMPO.



	#Deletar os registro da tabela;


DELETE FROM curso WHERE id = '1';

delete from curso WHERE ano = '2050'		--> O limit limita a quantidade que ira ser apagado;
limit 2;


truncate curso;					--> Apaga todos os dados registrados na tabela.


				GERAR SCRIPT DO BANCO


mysqldump -u root -p nome_do_banco > nomedoarquivo.sql



importar -- >>>> mysql -u usuario -p banco_de_dados < nomedoarquivo.sql
	

		# SELECT * FROM cursos;  

select * from  --> Selecione todos os campos da tabela cursos


select * from curso ORDER BY nome DESC; 	--> Ordena por onrdem alfabética de z - a


select nome, carga, ano FROM cursos             --> Seleciona os campos desejados
order by nome;



select ano, nome, carga FROM cursos             --> Seleciona os campos desejados pela order de ano
order by ano, nome;				--> Comerça com o ano e ira mostrar os nomes por orgerm alfabética.
	




select ano, carga, nome FROM curso 
WHERE ano = 2016
order by nome;





SELECT ano, nome FROM  curso 			--> Mostra todos os dados cadastrados que  ano é menor que 2015
WHERE ano <= 2015 
ordar by nome;



ou WHERE ano >= 2015		--> para mostrar os maiores

ou WHERE ano != 2015		--> Lista todos diferentes



SELECT nome, ano FROM  curso
WHERE  ano BETWEEN 2014 AND 2016
ordar by ano;

SELECT nome, ano FROM  curso
WHERE  ano IN (2014, 2016)
ordar by ano;

SELECT nome, caarga, totaula FROM curso
WHERE carga > 35 AND totaula < 30
order by nome;


				CHAVE ESTRANGEIRA ---- RELACIONAMENTO DE TABELAS

alter table pessoa
add column id_curso int;		-->adcinando a chava estrangrira que ira ligar com a tabela curso


alter table pessoa
add foreign key (id_curso)	---> Tornando id_curso um chave estrangeira
references curso (id);		---> Refenciando a chave estreganria a  chave primaria da tabela curso



	MUL --> segnifica chava multipla que é a mesma coisa de uma chave estrageira


update pessoa set id_curso = '6' where id = '1' 	-->Add um curso a uma pessoa, prmeiro o id do curdo e depois o id da pessoa que ira recebelo




delete from curso where id = '6'; 	       --->Entei deletaar o curso de id 6, mas deu um erro pois ele esta cendo referenciado por uma outra tabela



select pessoa.nome, curso.nome curso.ano     -->Mostrará as pessoas com os seus respectivos curdos.
FROM pessoa INNER JOIN curso
ON curso.id =  pessoa.id_curso
ORDER BY pessoa.nome;


or

SELECT p.nome, c.nome, c.carga, c.ano 
FROM pessoa AS p INNER JOIN curso AS c    ---> as é melhor pois diminui um pouco o código
ON c.id = p.id_curso
ORDER BU p.nome;



SELECT p.nome, c.nome, c.carga, c.ano 
FROM pessoa AS p LEFT OUTER JOIN curso AS c    ---> vAR DAR PREFERENCIA A COLUNA DA ESQUERDA(left join)
ON c.id = p.id_curso
ORDER BU p.nome;


SELECT p.nome, c.nome, c.carga, c.ano 
FROM pessoa AS p RIGHT OUTER JOIN curso AS c    ---> vAR DAR PREFERENCIA A COLUNA DA DIREITA (right join)
ON c.id = p.id_curso
ORDER BU p.nome;


RELACIONAMENTO DE VARIAS TABELAS

create table compra_curso(id int auto_increment, 
data date,
id_pessoa int, 
id_curso int, 						--> tabela compra para ligar um com a outra;
PRIMARY KEY(id),
FOREIGN KEY (id_pessoa) references pessoa(id),
FOREIGN KEY (id_c,urso) REFERENCES curso(id)
);



adcionado dados na compra 

INSERT INTO compra_curso VALUES(DEFAULT, '2015-03-01', '1', '2');


	MOSTRAR A TABELA DE COMPRA
select * from pessoa p INNER JOIN compra_curso cp  ON p.id = cp.id_pessoa;



select p.id, p.nome, c.id, c.nome FROM pessoa p INNER JOIN compra_curso cp ON p.id = cp.id_pessoa INNER JOIN curso c ON c.id = cp.id_curso ORDER BY p.nome;



